name: Build and Release
on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - '.github/**'
      - '!.github/workflows/**'
      - 'README'
      - 'LICENSE'

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        preferLatestVersion: true
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.10.2
    - name: Generate changelog
      id: changelog
      shell: pwsh
      run: |
        $lastTag = git describe --tags --abbrev=0 2>$null
        if ($lastTag) {
          $range = "$lastTag..HEAD"
        } else {
          $range = "HEAD"
        }
        
        $features = @()
        $fixes = @()
        $other = @()
        
        git log $range --pretty=format:"%h|%s|%an" --reverse | ForEach-Object {
          $hash, $message, $author = $_ -split "\|"
          
          if ($message -match "^feat(\(.+\))?!?: ") {
            $cleanMessage = $message -replace '^feat(\(.+\))?: ',''
            $features += "- $cleanMessage ([${hash}](../../commit/$hash)) - $author"
          }
          elseif ($message -match "^fix(\(.+\))?: ") {
            $cleanMessage = $message -replace '^fix(\(.+\))?: ',''
            $fixes += "- $cleanMessage ([${hash}](../../commit/$hash)) - $author"
          }
          else {
            $other += "- $message ([${hash}](../../commit/$hash)) - $author"
          }
        }
        
        $sections = @()
        
        if ($features) {
            $sections += "### ✨ New Features`n$($features -join "`n")"
        }
        if ($fixes) {
            $sections += "### 🐛 Bug Fixes`n$($fixes -join "`n")"
        }
        if ($other) {
            $sections += "### 🔄 Other Changes`n$($other -join "`n")"
        }
        
        $contributors = git log $range --format='%an' | Sort-Object -Unique
        if ($contributors) {
            $sections += "### 👥 Contributors`n$($contributors -join "`n")"
        }
        
        $changelogContent = "## What's Changed`n`n$($sections -join "`n`n")"
        
        $changelogContent | Out-File -FilePath changelog.md -Encoding UTF8
        
        $escaped = $changelogContent -replace '%','%25' -replace "`n",'%0A' -replace "`r",'' -replace ':','%3A'
        "changelog=$escaped" >> $env:GITHUB_OUTPUT
    - name: Build
      run: |
        dotnet restore
        dotnet build --configuration Release /p:Version=${{ steps.gitversion.outputs.semVer }} /p:OutputPath=artifacts
        dotnet pack --configuration Release /p:Version=${{ steps.gitversion.outputs.semVer }} --no-build --output nupkg /p:OutputPath=artifacts
    - name: Test
      run: dotnet test --configuration Release --no-build
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.gitversion.outputs.semVer }}
        name: Release v${{ steps.gitversion.outputs.semVer }}
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false
        files: |
          ./artifacts/SmallBin.dll
          ./nupkg/SmallBin.${{ steps.gitversion.outputs.semVer }}.nupkg
    - name: Push to NuGet
      run: dotnet nuget push ./nupkg/SmallBin.${{ steps.gitversion.outputs.semVer }}.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
