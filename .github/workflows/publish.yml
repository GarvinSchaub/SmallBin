name: Build and Release
on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - '.github/**'
      - '!.github/workflows/**'
      - 'README'
      - 'LICENSE'

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        preferLatestVersion: true
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.10.2
    - name: Generate changelog
      id: changelog
      shell: pwsh
      run: |
        $lastTag = git describe --tags --abbrev=0 2>$null
        $range = if ($lastTag) { "$lastTag..HEAD" } else { "HEAD" }
        
        $commits = git log $range --pretty=format:"%h|%s" --reverse | ForEach-Object {
          $hash, $message = $_ -split "\|"
          $cleanMessage = $message -replace '^(feat|fix|chore|docs|style|refactor|perf|test|ci)(\(.+\))?!?: ',''
          "- $cleanMessage ([${hash}](../../commit/$hash))"
        }
        
        $changelogContent = @"
        ## What's Changed
        
        ### Changes
        $($commits -join "`n")
        "@
        
        $changelogContent | Out-File -FilePath changelog.md -Encoding UTF8
        echo "changelog<<EOF" >> $env:GITHUB_OUTPUT
        $changelogContent >> $env:GITHUB_OUTPUT
        echo "EOF" >> $env:GITHUB_OUTPUT
    - name: Build
      run: |
        dotnet restore
        dotnet build --configuration Release /p:Version=${{ steps.gitversion.outputs.majorMinorPatch }} --output ./artifacts
        dotnet pack --configuration Release /p:Version=${{ steps.gitversion.outputs.majorMinorPatch }} --no-build --output nupkg
    - name: Test
      run: dotnet test --configuration Release --no-build
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2.1.0
      with:
        tag_name: v${{ steps.gitversion.outputs.majorMinorPatch }}
        name: Release v${{ steps.gitversion.outputs.majorMinorPatch }}
        body_path: changelog.md
        draft: false
        prerelease: false
        files: |
          ./artifacts/SmallBin.dll
          ./nupkg/SmallBin.${{ steps.gitversion.outputs.majorMinorPatch }}.nupkg
    - name: Push to NuGet
      run: dotnet nuget push ./nupkg/SmallBin.${{ steps.gitversion.outputs.majorMinorPatch }}.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
